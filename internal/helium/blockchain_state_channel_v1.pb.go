// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: blockchain_state_channel_v1.proto

package helium

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Region int32

const (
	Region_US915 Region = 0
	Region_EU868 Region = 1
	Region_EU433 Region = 2
	Region_CN470 Region = 3
	Region_CN779 Region = 4
	Region_AU915 Region = 5
	Region_AS923 Region = 6
	Region_KR920 Region = 7
	Region_IN865 Region = 8
)

// Enum value maps for Region.
var (
	Region_name = map[int32]string{
		0: "US915",
		1: "EU868",
		2: "EU433",
		3: "CN470",
		4: "CN779",
		5: "AU915",
		6: "AS923",
		7: "KR920",
		8: "IN865",
	}
	Region_value = map[string]int32{
		"US915": 0,
		"EU868": 1,
		"EU433": 2,
		"CN470": 3,
		"CN779": 4,
		"AU915": 5,
		"AS923": 6,
		"KR920": 7,
		"IN865": 8,
	}
)

func (x Region) Enum() *Region {
	p := new(Region)
	*p = x
	return p
}

func (x Region) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Region) Descriptor() protoreflect.EnumDescriptor {
	return file_blockchain_state_channel_v1_proto_enumTypes[0].Descriptor()
}

func (Region) Type() protoreflect.EnumType {
	return &file_blockchain_state_channel_v1_proto_enumTypes[0]
}

func (x Region) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Region.Descriptor instead.
func (Region) EnumDescriptor() ([]byte, []int) {
	return file_blockchain_state_channel_v1_proto_rawDescGZIP(), []int{0}
}

type BlockchainStateChannelStateV1 int32

const (
	BlockchainStateChannelStateV1_open   BlockchainStateChannelStateV1 = 0
	BlockchainStateChannelStateV1_closed BlockchainStateChannelStateV1 = 1
)

// Enum value maps for BlockchainStateChannelStateV1.
var (
	BlockchainStateChannelStateV1_name = map[int32]string{
		0: "open",
		1: "closed",
	}
	BlockchainStateChannelStateV1_value = map[string]int32{
		"open":   0,
		"closed": 1,
	}
)

func (x BlockchainStateChannelStateV1) Enum() *BlockchainStateChannelStateV1 {
	p := new(BlockchainStateChannelStateV1)
	*p = x
	return p
}

func (x BlockchainStateChannelStateV1) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BlockchainStateChannelStateV1) Descriptor() protoreflect.EnumDescriptor {
	return file_blockchain_state_channel_v1_proto_enumTypes[1].Descriptor()
}

func (BlockchainStateChannelStateV1) Type() protoreflect.EnumType {
	return &file_blockchain_state_channel_v1_proto_enumTypes[1]
}

func (x BlockchainStateChannelStateV1) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BlockchainStateChannelStateV1.Descriptor instead.
func (BlockchainStateChannelStateV1) EnumDescriptor() ([]byte, []int) {
	return file_blockchain_state_channel_v1_proto_rawDescGZIP(), []int{1}
}

type BlockchainStateChannelSummaryV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientPubkeybin []byte `protobuf:"bytes,1,opt,name=client_pubkeybin,json=clientPubkeybin,proto3" json:"client_pubkeybin,omitempty"`
	NumPackets      uint64 `protobuf:"varint,2,opt,name=num_packets,json=numPackets,proto3" json:"num_packets,omitempty"`
	NumDcs          uint64 `protobuf:"varint,3,opt,name=num_dcs,json=numDcs,proto3" json:"num_dcs,omitempty"`
}

func (x *BlockchainStateChannelSummaryV1) Reset() {
	*x = BlockchainStateChannelSummaryV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_state_channel_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainStateChannelSummaryV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainStateChannelSummaryV1) ProtoMessage() {}

func (x *BlockchainStateChannelSummaryV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_state_channel_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainStateChannelSummaryV1.ProtoReflect.Descriptor instead.
func (*BlockchainStateChannelSummaryV1) Descriptor() ([]byte, []int) {
	return file_blockchain_state_channel_v1_proto_rawDescGZIP(), []int{0}
}

func (x *BlockchainStateChannelSummaryV1) GetClientPubkeybin() []byte {
	if x != nil {
		return x.ClientPubkeybin
	}
	return nil
}

func (x *BlockchainStateChannelSummaryV1) GetNumPackets() uint64 {
	if x != nil {
		return x.NumPackets
	}
	return 0
}

func (x *BlockchainStateChannelSummaryV1) GetNumDcs() uint64 {
	if x != nil {
		return x.NumDcs
	}
	return 0
}

type BlockchainStateChannelV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        []byte                             `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Owner     []byte                             `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	Credits   uint64                             `protobuf:"varint,3,opt,name=credits,proto3" json:"credits,omitempty"`
	Nonce     uint64                             `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Summaries []*BlockchainStateChannelSummaryV1 `protobuf:"bytes,5,rep,name=summaries,proto3" json:"summaries,omitempty"`
	RootHash  []byte                             `protobuf:"bytes,6,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	// This is unused but we can't remove it yet
	Skewed        []byte                        `protobuf:"bytes,7,opt,name=skewed,proto3" json:"skewed,omitempty"`
	State         BlockchainStateChannelStateV1 `protobuf:"varint,8,opt,name=state,proto3,enum=helium.BlockchainStateChannelStateV1" json:"state,omitempty"`
	ExpireAtBlock uint64                        `protobuf:"varint,9,opt,name=expire_at_block,json=expireAtBlock,proto3" json:"expire_at_block,omitempty"`
	Signature     []byte                        `protobuf:"bytes,10,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *BlockchainStateChannelV1) Reset() {
	*x = BlockchainStateChannelV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_state_channel_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainStateChannelV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainStateChannelV1) ProtoMessage() {}

func (x *BlockchainStateChannelV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_state_channel_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainStateChannelV1.ProtoReflect.Descriptor instead.
func (*BlockchainStateChannelV1) Descriptor() ([]byte, []int) {
	return file_blockchain_state_channel_v1_proto_rawDescGZIP(), []int{1}
}

func (x *BlockchainStateChannelV1) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *BlockchainStateChannelV1) GetOwner() []byte {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *BlockchainStateChannelV1) GetCredits() uint64 {
	if x != nil {
		return x.Credits
	}
	return 0
}

func (x *BlockchainStateChannelV1) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *BlockchainStateChannelV1) GetSummaries() []*BlockchainStateChannelSummaryV1 {
	if x != nil {
		return x.Summaries
	}
	return nil
}

func (x *BlockchainStateChannelV1) GetRootHash() []byte {
	if x != nil {
		return x.RootHash
	}
	return nil
}

func (x *BlockchainStateChannelV1) GetSkewed() []byte {
	if x != nil {
		return x.Skewed
	}
	return nil
}

func (x *BlockchainStateChannelV1) GetState() BlockchainStateChannelStateV1 {
	if x != nil {
		return x.State
	}
	return BlockchainStateChannelStateV1_open
}

func (x *BlockchainStateChannelV1) GetExpireAtBlock() uint64 {
	if x != nil {
		return x.ExpireAtBlock
	}
	return 0
}

func (x *BlockchainStateChannelV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type BlockchainStateChannelResponseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Accepted bool    `protobuf:"varint,1,opt,name=accepted,proto3" json:"accepted,omitempty"`
	Downlink *Packet `protobuf:"bytes,4,opt,name=downlink,proto3" json:"downlink,omitempty"`
}

func (x *BlockchainStateChannelResponseV1) Reset() {
	*x = BlockchainStateChannelResponseV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_state_channel_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainStateChannelResponseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainStateChannelResponseV1) ProtoMessage() {}

func (x *BlockchainStateChannelResponseV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_state_channel_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainStateChannelResponseV1.ProtoReflect.Descriptor instead.
func (*BlockchainStateChannelResponseV1) Descriptor() ([]byte, []int) {
	return file_blockchain_state_channel_v1_proto_rawDescGZIP(), []int{2}
}

func (x *BlockchainStateChannelResponseV1) GetAccepted() bool {
	if x != nil {
		return x.Accepted
	}
	return false
}

func (x *BlockchainStateChannelResponseV1) GetDownlink() *Packet {
	if x != nil {
		return x.Downlink
	}
	return nil
}

type BlockchainStateChannelPacketV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Packet    *Packet `protobuf:"bytes,1,opt,name=packet,proto3" json:"packet,omitempty"`
	Hotspot   []byte  `protobuf:"bytes,2,opt,name=hotspot,proto3" json:"hotspot,omitempty"`
	Signature []byte  `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Region    Region  `protobuf:"varint,4,opt,name=region,proto3,enum=helium.Region" json:"region,omitempty"`
	HoldTime  uint64  `protobuf:"varint,5,opt,name=hold_time,json=holdTime,proto3" json:"hold_time,omitempty"`
}

func (x *BlockchainStateChannelPacketV1) Reset() {
	*x = BlockchainStateChannelPacketV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_state_channel_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainStateChannelPacketV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainStateChannelPacketV1) ProtoMessage() {}

func (x *BlockchainStateChannelPacketV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_state_channel_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainStateChannelPacketV1.ProtoReflect.Descriptor instead.
func (*BlockchainStateChannelPacketV1) Descriptor() ([]byte, []int) {
	return file_blockchain_state_channel_v1_proto_rawDescGZIP(), []int{3}
}

func (x *BlockchainStateChannelPacketV1) GetPacket() *Packet {
	if x != nil {
		return x.Packet
	}
	return nil
}

func (x *BlockchainStateChannelPacketV1) GetHotspot() []byte {
	if x != nil {
		return x.Hotspot
	}
	return nil
}

func (x *BlockchainStateChannelPacketV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *BlockchainStateChannelPacketV1) GetRegion() Region {
	if x != nil {
		return x.Region
	}
	return Region_US915
}

func (x *BlockchainStateChannelPacketV1) GetHoldTime() uint64 {
	if x != nil {
		return x.HoldTime
	}
	return 0
}

type BlockchainStateChannelOfferV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Routing     *RoutingInformation `protobuf:"bytes,1,opt,name=routing,proto3" json:"routing,omitempty"`
	PacketHash  []byte              `protobuf:"bytes,2,opt,name=packet_hash,json=packetHash,proto3" json:"packet_hash,omitempty"`
	PayloadSize uint64              `protobuf:"varint,3,opt,name=payload_size,json=payloadSize,proto3" json:"payload_size,omitempty"`
	Fcnt        uint32              `protobuf:"varint,4,opt,name=fcnt,proto3" json:"fcnt,omitempty"`
	Hotspot     []byte              `protobuf:"bytes,5,opt,name=hotspot,proto3" json:"hotspot,omitempty"`
	Signature   []byte              `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	Region      Region              `protobuf:"varint,7,opt,name=region,proto3,enum=helium.Region" json:"region,omitempty"`
}

func (x *BlockchainStateChannelOfferV1) Reset() {
	*x = BlockchainStateChannelOfferV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_state_channel_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainStateChannelOfferV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainStateChannelOfferV1) ProtoMessage() {}

func (x *BlockchainStateChannelOfferV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_state_channel_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainStateChannelOfferV1.ProtoReflect.Descriptor instead.
func (*BlockchainStateChannelOfferV1) Descriptor() ([]byte, []int) {
	return file_blockchain_state_channel_v1_proto_rawDescGZIP(), []int{4}
}

func (x *BlockchainStateChannelOfferV1) GetRouting() *RoutingInformation {
	if x != nil {
		return x.Routing
	}
	return nil
}

func (x *BlockchainStateChannelOfferV1) GetPacketHash() []byte {
	if x != nil {
		return x.PacketHash
	}
	return nil
}

func (x *BlockchainStateChannelOfferV1) GetPayloadSize() uint64 {
	if x != nil {
		return x.PayloadSize
	}
	return 0
}

func (x *BlockchainStateChannelOfferV1) GetFcnt() uint32 {
	if x != nil {
		return x.Fcnt
	}
	return 0
}

func (x *BlockchainStateChannelOfferV1) GetHotspot() []byte {
	if x != nil {
		return x.Hotspot
	}
	return nil
}

func (x *BlockchainStateChannelOfferV1) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *BlockchainStateChannelOfferV1) GetRegion() Region {
	if x != nil {
		return x.Region
	}
	return Region_US915
}

type BlockchainStateChannelPurchaseV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sc         *BlockchainStateChannelV1 `protobuf:"bytes,1,opt,name=sc,proto3" json:"sc,omitempty"`
	Hotspot    []byte                    `protobuf:"bytes,2,opt,name=hotspot,proto3" json:"hotspot,omitempty"`
	PacketHash []byte                    `protobuf:"bytes,3,opt,name=packet_hash,json=packetHash,proto3" json:"packet_hash,omitempty"`
	Region     Region                    `protobuf:"varint,4,opt,name=region,proto3,enum=helium.Region" json:"region,omitempty"`
}

func (x *BlockchainStateChannelPurchaseV1) Reset() {
	*x = BlockchainStateChannelPurchaseV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_state_channel_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainStateChannelPurchaseV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainStateChannelPurchaseV1) ProtoMessage() {}

func (x *BlockchainStateChannelPurchaseV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_state_channel_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainStateChannelPurchaseV1.ProtoReflect.Descriptor instead.
func (*BlockchainStateChannelPurchaseV1) Descriptor() ([]byte, []int) {
	return file_blockchain_state_channel_v1_proto_rawDescGZIP(), []int{5}
}

func (x *BlockchainStateChannelPurchaseV1) GetSc() *BlockchainStateChannelV1 {
	if x != nil {
		return x.Sc
	}
	return nil
}

func (x *BlockchainStateChannelPurchaseV1) GetHotspot() []byte {
	if x != nil {
		return x.Hotspot
	}
	return nil
}

func (x *BlockchainStateChannelPurchaseV1) GetPacketHash() []byte {
	if x != nil {
		return x.PacketHash
	}
	return nil
}

func (x *BlockchainStateChannelPurchaseV1) GetRegion() Region {
	if x != nil {
		return x.Region
	}
	return Region_US915
}

type BlockchainStateChannelBannerV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sc *BlockchainStateChannelV1 `protobuf:"bytes,1,opt,name=sc,proto3" json:"sc,omitempty"`
}

func (x *BlockchainStateChannelBannerV1) Reset() {
	*x = BlockchainStateChannelBannerV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_state_channel_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainStateChannelBannerV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainStateChannelBannerV1) ProtoMessage() {}

func (x *BlockchainStateChannelBannerV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_state_channel_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainStateChannelBannerV1.ProtoReflect.Descriptor instead.
func (*BlockchainStateChannelBannerV1) Descriptor() ([]byte, []int) {
	return file_blockchain_state_channel_v1_proto_rawDescGZIP(), []int{6}
}

func (x *BlockchainStateChannelBannerV1) GetSc() *BlockchainStateChannelV1 {
	if x != nil {
		return x.Sc
	}
	return nil
}

type BlockchainStateChannelRejectionV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reject uint32 `protobuf:"varint,1,opt,name=reject,proto3" json:"reject,omitempty"`
}

func (x *BlockchainStateChannelRejectionV1) Reset() {
	*x = BlockchainStateChannelRejectionV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_state_channel_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainStateChannelRejectionV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainStateChannelRejectionV1) ProtoMessage() {}

func (x *BlockchainStateChannelRejectionV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_state_channel_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainStateChannelRejectionV1.ProtoReflect.Descriptor instead.
func (*BlockchainStateChannelRejectionV1) Descriptor() ([]byte, []int) {
	return file_blockchain_state_channel_v1_proto_rawDescGZIP(), []int{7}
}

func (x *BlockchainStateChannelRejectionV1) GetReject() uint32 {
	if x != nil {
		return x.Reject
	}
	return 0
}

type BlockchainStateChannelMessageV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Msg:
	//	*BlockchainStateChannelMessageV1_Response
	//	*BlockchainStateChannelMessageV1_Packet
	//	*BlockchainStateChannelMessageV1_Offer
	//	*BlockchainStateChannelMessageV1_Purchase
	//	*BlockchainStateChannelMessageV1_Banner
	//	*BlockchainStateChannelMessageV1_Reject
	Msg isBlockchainStateChannelMessageV1_Msg `protobuf_oneof:"msg"`
}

func (x *BlockchainStateChannelMessageV1) Reset() {
	*x = BlockchainStateChannelMessageV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blockchain_state_channel_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockchainStateChannelMessageV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockchainStateChannelMessageV1) ProtoMessage() {}

func (x *BlockchainStateChannelMessageV1) ProtoReflect() protoreflect.Message {
	mi := &file_blockchain_state_channel_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockchainStateChannelMessageV1.ProtoReflect.Descriptor instead.
func (*BlockchainStateChannelMessageV1) Descriptor() ([]byte, []int) {
	return file_blockchain_state_channel_v1_proto_rawDescGZIP(), []int{8}
}

func (m *BlockchainStateChannelMessageV1) GetMsg() isBlockchainStateChannelMessageV1_Msg {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (x *BlockchainStateChannelMessageV1) GetResponse() *BlockchainStateChannelResponseV1 {
	if x, ok := x.GetMsg().(*BlockchainStateChannelMessageV1_Response); ok {
		return x.Response
	}
	return nil
}

func (x *BlockchainStateChannelMessageV1) GetPacket() *BlockchainStateChannelPacketV1 {
	if x, ok := x.GetMsg().(*BlockchainStateChannelMessageV1_Packet); ok {
		return x.Packet
	}
	return nil
}

func (x *BlockchainStateChannelMessageV1) GetOffer() *BlockchainStateChannelOfferV1 {
	if x, ok := x.GetMsg().(*BlockchainStateChannelMessageV1_Offer); ok {
		return x.Offer
	}
	return nil
}

func (x *BlockchainStateChannelMessageV1) GetPurchase() *BlockchainStateChannelPurchaseV1 {
	if x, ok := x.GetMsg().(*BlockchainStateChannelMessageV1_Purchase); ok {
		return x.Purchase
	}
	return nil
}

func (x *BlockchainStateChannelMessageV1) GetBanner() *BlockchainStateChannelBannerV1 {
	if x, ok := x.GetMsg().(*BlockchainStateChannelMessageV1_Banner); ok {
		return x.Banner
	}
	return nil
}

func (x *BlockchainStateChannelMessageV1) GetReject() *BlockchainStateChannelRejectionV1 {
	if x, ok := x.GetMsg().(*BlockchainStateChannelMessageV1_Reject); ok {
		return x.Reject
	}
	return nil
}

type isBlockchainStateChannelMessageV1_Msg interface {
	isBlockchainStateChannelMessageV1_Msg()
}

type BlockchainStateChannelMessageV1_Response struct {
	Response *BlockchainStateChannelResponseV1 `protobuf:"bytes,2,opt,name=response,proto3,oneof"`
}

type BlockchainStateChannelMessageV1_Packet struct {
	Packet *BlockchainStateChannelPacketV1 `protobuf:"bytes,4,opt,name=packet,proto3,oneof"`
}

type BlockchainStateChannelMessageV1_Offer struct {
	Offer *BlockchainStateChannelOfferV1 `protobuf:"bytes,5,opt,name=offer,proto3,oneof"`
}

type BlockchainStateChannelMessageV1_Purchase struct {
	Purchase *BlockchainStateChannelPurchaseV1 `protobuf:"bytes,6,opt,name=purchase,proto3,oneof"`
}

type BlockchainStateChannelMessageV1_Banner struct {
	Banner *BlockchainStateChannelBannerV1 `protobuf:"bytes,7,opt,name=banner,proto3,oneof"`
}

type BlockchainStateChannelMessageV1_Reject struct {
	Reject *BlockchainStateChannelRejectionV1 `protobuf:"bytes,8,opt,name=reject,proto3,oneof"`
}

func (*BlockchainStateChannelMessageV1_Response) isBlockchainStateChannelMessageV1_Msg() {}

func (*BlockchainStateChannelMessageV1_Packet) isBlockchainStateChannelMessageV1_Msg() {}

func (*BlockchainStateChannelMessageV1_Offer) isBlockchainStateChannelMessageV1_Msg() {}

func (*BlockchainStateChannelMessageV1_Purchase) isBlockchainStateChannelMessageV1_Msg() {}

func (*BlockchainStateChannelMessageV1_Banner) isBlockchainStateChannelMessageV1_Msg() {}

func (*BlockchainStateChannelMessageV1_Reject) isBlockchainStateChannelMessageV1_Msg() {}

var File_blockchain_state_channel_v1_proto protoreflect.FileDescriptor

var file_blockchain_state_channel_v1_proto_rawDesc = []byte{
	0x0a, 0x21, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x31, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x06, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x1a, 0x0c, 0x70, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x01, 0x0a, 0x23, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x76,
	0x31, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x75, 0x62, 0x6b,
	0x65, 0x79, 0x62, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x50, 0x75, 0x62, 0x6b, 0x65, 0x79, 0x62, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x6e, 0x75, 0x6d, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x17, 0x0a,
	0x07, 0x6e, 0x75, 0x6d, 0x5f, 0x64, 0x63, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x6e, 0x75, 0x6d, 0x44, 0x63, 0x73, 0x22, 0xfa, 0x02, 0x0a, 0x1b, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x09,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x76, 0x31, 0x52, 0x09, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x69, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74,
	0x48, 0x61, 0x73, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x65, 0x77, 0x65, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x6b, 0x65, 0x77, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x68, 0x65,
	0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x76, 0x31, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x61, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x41, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x22, 0x6e, 0x0a, 0x24, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x76, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x65, 0x6c, 0x69,
	0x75, 0x6d, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x69, 0x6e, 0x6b, 0x22, 0xc9, 0x01, 0x0a, 0x22, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x76, 0x31, 0x12, 0x26, 0x0a, 0x06, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x65, 0x6c,
	0x69, 0x75, 0x6d, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x68, 0x65, 0x6c,
	0x69, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x6c, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x92, 0x02, 0x0a, 0x21, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x5f, 0x76, 0x31, 0x12, 0x35, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x66, 0x63, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x66, 0x63, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x26, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x68,
	0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x22, 0xbe, 0x01, 0x0a, 0x24, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x31, 0x12, 0x33, 0x0a,
	0x02, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x65, 0x6c, 0x69,
	0x75, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x31, 0x52, 0x02,
	0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x73, 0x70, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x26, 0x0a,
	0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0e, 0x2e,
	0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x22, 0x59, 0x0a, 0x22, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x12, 0x33, 0x0a, 0x02, 0x73,
	0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d,
	0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x76, 0x31, 0x52, 0x02, 0x73, 0x63,
	0x22, 0x3f, 0x0a, 0x25, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x22, 0xdc, 0x03, 0x0a, 0x23, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x76, 0x31, 0x12, 0x4a, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x68, 0x65,
	0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x76, 0x31, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x76,
	0x31, 0x48, 0x00, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x41, 0x0a, 0x05, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x68, 0x65, 0x6c,
	0x69, 0x75, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x5f, 0x76, 0x31, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x4a,
	0x0a, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x76, 0x31, 0x48, 0x00,
	0x52, 0x08, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x06, 0x62, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x68, 0x65, 0x6c,
	0x69, 0x75, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x62, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x48, 0x00, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x47, 0x0a, 0x06, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x5f, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x31, 0x48,
	0x00, 0x52, 0x06, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x42, 0x05, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x2a, 0x6b, 0x0a, 0x06, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x55, 0x53,
	0x39, 0x31, 0x35, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x55, 0x38, 0x36, 0x38, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x45, 0x55, 0x34, 0x33, 0x33, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x43,
	0x4e, 0x34, 0x37, 0x30, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x4e, 0x37, 0x37, 0x39, 0x10,
	0x04, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x39, 0x31, 0x35, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05,
	0x41, 0x53, 0x39, 0x32, 0x33, 0x10, 0x06, 0x12, 0x09, 0x0a, 0x05, 0x4b, 0x52, 0x39, 0x32, 0x30,
	0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x4e, 0x38, 0x36, 0x35, 0x10, 0x08, 0x2a, 0x39, 0x0a,
	0x21, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x76, 0x31, 0x12, 0x08, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x10, 0x01, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x6f, 0x75, 0x67, 0x6b, 0x69, 0x72, 0x6b, 0x6c,
	0x65, 0x79, 0x2f, 0x68, 0x65, 0x6c, 0x69, 0x75, 0x6d, 0x2d, 0x67, 0x6f, 0x2f, 0x68, 0x65, 0x6c,
	0x69, 0x75, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blockchain_state_channel_v1_proto_rawDescOnce sync.Once
	file_blockchain_state_channel_v1_proto_rawDescData = file_blockchain_state_channel_v1_proto_rawDesc
)

func file_blockchain_state_channel_v1_proto_rawDescGZIP() []byte {
	file_blockchain_state_channel_v1_proto_rawDescOnce.Do(func() {
		file_blockchain_state_channel_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_blockchain_state_channel_v1_proto_rawDescData)
	})
	return file_blockchain_state_channel_v1_proto_rawDescData
}

var file_blockchain_state_channel_v1_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_blockchain_state_channel_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_blockchain_state_channel_v1_proto_goTypes = []interface{}{
	(Region)(0),                               // 0: helium.Region
	(BlockchainStateChannelStateV1)(0),        // 1: helium.blockchain_state_channel_state_v1
	(*BlockchainStateChannelSummaryV1)(nil),   // 2: helium.blockchain_state_channel_summary_v1
	(*BlockchainStateChannelV1)(nil),          // 3: helium.blockchain_state_channel_v1
	(*BlockchainStateChannelResponseV1)(nil),  // 4: helium.blockchain_state_channel_response_v1
	(*BlockchainStateChannelPacketV1)(nil),    // 5: helium.blockchain_state_channel_packet_v1
	(*BlockchainStateChannelOfferV1)(nil),     // 6: helium.blockchain_state_channel_offer_v1
	(*BlockchainStateChannelPurchaseV1)(nil),  // 7: helium.blockchain_state_channel_purchase_v1
	(*BlockchainStateChannelBannerV1)(nil),    // 8: helium.blockchain_state_channel_banner_v1
	(*BlockchainStateChannelRejectionV1)(nil), // 9: helium.blockchain_state_channel_rejection_v1
	(*BlockchainStateChannelMessageV1)(nil),   // 10: helium.blockchain_state_channel_message_v1
	(*Packet)(nil),                            // 11: helium.packet
	(*RoutingInformation)(nil),                // 12: helium.routing_information
}
var file_blockchain_state_channel_v1_proto_depIdxs = []int32{
	2,  // 0: helium.blockchain_state_channel_v1.summaries:type_name -> helium.blockchain_state_channel_summary_v1
	1,  // 1: helium.blockchain_state_channel_v1.state:type_name -> helium.blockchain_state_channel_state_v1
	11, // 2: helium.blockchain_state_channel_response_v1.downlink:type_name -> helium.packet
	11, // 3: helium.blockchain_state_channel_packet_v1.packet:type_name -> helium.packet
	0,  // 4: helium.blockchain_state_channel_packet_v1.region:type_name -> helium.Region
	12, // 5: helium.blockchain_state_channel_offer_v1.routing:type_name -> helium.routing_information
	0,  // 6: helium.blockchain_state_channel_offer_v1.region:type_name -> helium.Region
	3,  // 7: helium.blockchain_state_channel_purchase_v1.sc:type_name -> helium.blockchain_state_channel_v1
	0,  // 8: helium.blockchain_state_channel_purchase_v1.region:type_name -> helium.Region
	3,  // 9: helium.blockchain_state_channel_banner_v1.sc:type_name -> helium.blockchain_state_channel_v1
	4,  // 10: helium.blockchain_state_channel_message_v1.response:type_name -> helium.blockchain_state_channel_response_v1
	5,  // 11: helium.blockchain_state_channel_message_v1.packet:type_name -> helium.blockchain_state_channel_packet_v1
	6,  // 12: helium.blockchain_state_channel_message_v1.offer:type_name -> helium.blockchain_state_channel_offer_v1
	7,  // 13: helium.blockchain_state_channel_message_v1.purchase:type_name -> helium.blockchain_state_channel_purchase_v1
	8,  // 14: helium.blockchain_state_channel_message_v1.banner:type_name -> helium.blockchain_state_channel_banner_v1
	9,  // 15: helium.blockchain_state_channel_message_v1.reject:type_name -> helium.blockchain_state_channel_rejection_v1
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_blockchain_state_channel_v1_proto_init() }
func file_blockchain_state_channel_v1_proto_init() {
	if File_blockchain_state_channel_v1_proto != nil {
		return
	}
	file_packet_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_blockchain_state_channel_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainStateChannelSummaryV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_state_channel_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainStateChannelV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_state_channel_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainStateChannelResponseV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_state_channel_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainStateChannelPacketV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_state_channel_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainStateChannelOfferV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_state_channel_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainStateChannelPurchaseV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_state_channel_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainStateChannelBannerV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_state_channel_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainStateChannelRejectionV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blockchain_state_channel_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockchainStateChannelMessageV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_blockchain_state_channel_v1_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*BlockchainStateChannelMessageV1_Response)(nil),
		(*BlockchainStateChannelMessageV1_Packet)(nil),
		(*BlockchainStateChannelMessageV1_Offer)(nil),
		(*BlockchainStateChannelMessageV1_Purchase)(nil),
		(*BlockchainStateChannelMessageV1_Banner)(nil),
		(*BlockchainStateChannelMessageV1_Reject)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blockchain_state_channel_v1_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_blockchain_state_channel_v1_proto_goTypes,
		DependencyIndexes: file_blockchain_state_channel_v1_proto_depIdxs,
		EnumInfos:         file_blockchain_state_channel_v1_proto_enumTypes,
		MessageInfos:      file_blockchain_state_channel_v1_proto_msgTypes,
	}.Build()
	File_blockchain_state_channel_v1_proto = out.File
	file_blockchain_state_channel_v1_proto_rawDesc = nil
	file_blockchain_state_channel_v1_proto_goTypes = nil
	file_blockchain_state_channel_v1_proto_depIdxs = nil
}
